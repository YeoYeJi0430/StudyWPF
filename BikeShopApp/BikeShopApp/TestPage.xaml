<Page x:Class="BikeShopApp.TestPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BikeShopApp"
      xmlns:bl="clr-namespace:BusinessLogic"
      xmlns:m="clr-namespace:BikeShopApp.Maths"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="TestPage" Background="RoyalBlue">
    <Page.Resources>
        <m:TwiceConverter x:Key="twiceConv"/> <!--binding할때 key필요-->
    </Page.Resources>

    <Grid Loaded="Grid_Loaded">
        <!--<Label>
            <bl:Car x:Name="car1" Speed="50.4" Color="AliceBlue">
                <bl:Car.Driver>
                    <bl:Human Name="Yeo" HasDrivingLicense="False" />
                </bl:Car.Driver>
            </bl:Car>
        </Label>-->
        <!--Car class 사용, xmlns:local="clr-namespace:BikeShopApp" : Car는 BikeShopApp의 namespace를 사용
        namespace의 class사용시 local:필요함-->
        
        <!--<Grid Width="50" Height="50" Background="Orange">
            <Button Content="Hell World" Margin="5"/>
        </Grid>-->
        <!--<StackPanel Background="Orange">
            <Button Canvas.Left="10" Canvas.Top="15" Content="Button A"/>
            <Button Canvas.Left="20" Canvas.Bottom="20" Content="Button B"/>
            <Button Canvas.Left="100" Canvas.Top="200" Content="Button C"/>
            --><!----><!--
        </StackPanel>-->
        <!--부모가 Grid이면 자식 canvas로채움-->

        <!--<DockPanel Background="Orange">
            <Button Content="Button A" DockPanel.Dock="Left"/>
            <Button Content="Button B" DockPanel.Dock="Right"/>
            <Button Content="Button C" DockPanel.Dock="Top"/>
            <Button Content="Button D" DockPanel.Dock="Bottom"/>
            <Button Content="Button E" />
        </DockPanel>-->

        <!--<Grid Width="500" Height="200">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="120"/> --><!--안쪽 그리드 중앙에 가로선 생김--><!--
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>--><!--안쪽 그리드 중앙에 세로선 생김--><!--
            <Button Grid.Row="0" Grid.Column="0" Content="Button A" Margin="5"/>--><!--Defalut = (0,0) : 컬럼이랑 로우 값 바꿔보기--><!--
            <Button Grid.Row="0" Grid.Column="1" Content="Button B" Margin="5"/>
            <Button Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Content="Button C" Margin="5"/>
            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Content="Button D" Margin="5"/>
            --><!--Grid.ColumnSpan="2" : 컬럼 2개 합침--><!--
        </Grid>-->

        <!--<Grid Width="500" Height="100">
            <Grid.RowDefinitions>
                <RowDefinition Height="80"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/> --><!--*:배율1:1--><!--
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
        </Grid>-->
        
        <!--<grid width="320" height="200">
            <grid.columndefinitions>
                <columndefinition/>
                <columndefinition width="20"/>
                <columndefinition/>
            </grid.columndefinitions>

            <listbox>
                <label content="element1"/>
                <label content="element2"/>
                <textblock text="element3"/>
                <groupbox header="element4">
                    this is a subsentence
                </groupbox>
            </listbox>

            <combobox grid.column="2" height="30" verticalalignment="top">
                <label content="element1"/>
                <label content="element2"/>
                <textblock text="element3"/>
                <groupbox header="element4">
                    this is a subsentence
                </groupbox>
            </combobox>
        </grid>-->

        <!--<StackPanel Margin="10">
            <Slider x:Name="slider" Value="10" Minimum="0" Maximum="100"/>
            <ProgressBar Height="30" Value="{Binding Value, ElementName=slider}"/>
            --><!--slider랑 value로 바인딩 하겠다. 슬라이더와 프로그래스바 연동했음. 
            ElementName = Slider이름 넣기--><!--
            
            <TextBlock TextAlignment="Center" Text="{Binding Value, ElementName=slider, StringFormat='{}{0:#,#}'}"/>
            --><!--tringFormat='{}[0:#,#}' : progressbar아래에 수를 정수로--><!--

            <TextBlock Text="{Binding Driver.Name}" FontSize="20" Height="30" TextAlignment="Center"/>
            
            --><!--<TextBox Text="{Binding Speed, Mode=TwoWay}" FontSize="16" Width="100"/>-->
            <!--Text="{Binding Speed}" : .cs에서 this.DataContext = car;가 car를 쓰겠다고 명령한것
            따라서 바인딩 하고 스피드만 넣으면 됨--><!--
            
            <TextBox Text="{Binding Speed, Mode=TwoWay,Converter={StaticResource twiceConv}}" FontSize="16" Width="100"/>
            <TextBlock Text="{Binding Speed,Mode=OneWay}" FontSize="20"/>
            --><!--원래 speed값이 100인데 *2 해서 결과물 출력함
            StaticResource twiceConv 키 값으로 넣음
            바인딩에서 Mode 확인해보기--><!--
            
        </StackPanel>-->
        
        
        <!--<Grid Width="320" Height="200">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <ListBox x:Name="LstCar" Grid.Column="0" ItemsSource="{Binding}">
                --><!--전체를 다 넘길거여서 binding에 속성 필요없음
                .cs에서 for문한 데이터 넘어옴--><!--
                <ListBox.ItemTemplate>
                    <ItemContainerTemplate>
                        <StackPanel>
                            <TextBlock Text="속도"/>
                            <TextBox Text ="{Binding Speed, StringFormat='{}{0:0}'}"/>
                            --><!-- Label Content="{Binding Speed}"--><!--
                            <Slider Maximum="300" Value="{Binding Speed}"/>
                            <TextBlock Text="색상"/>
                            <Border Height="20">
                                <Border.Background>
                                    <SolidColorBrush Color="{Binding Color}"/>
                                </Border.Background>
                            </Border>
                            <TextBox Text="{Binding Color}" />
                            <TextBlock Text="운전자"/>
                            <TextBox Text="{Binding Driver.Name}"/>
                        </StackPanel>
                    </ItemContainerTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ComboBox Grid.Column="2" Height="30" VerticalAlignment="Top">
                <Label Content="Element1"/>
                <Label Content="Element2"/>
                <TextBlock Text="Element3"/>

                <GroupBox Header="Element4">
                    This is a subsentence
                </GroupBox>
            </ComboBox>
        </Grid>-->
        
        <!--<Grid Width="300" Height="100">
            --><!--<Label Content="{StaticResource button}" Background="{StaticResource accentBrush}"/>--> 
            <!--lable이지만 버튼으로? App.xaml에 정의--><!--
            <Button Content="Click" FontSize="20" Click="Button_Click">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        --><!--controltemp에서 쓸 애들은 button의 속성들을 가져와서 쓸 예정--><!--
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" 
                                     StrokeThickness="{TemplateBinding FontSize}" Stroke="Red"/>
                            --><!-- Ellipse Fill="{TemplateBinding Background}" 에서 background에서 정의로이동하면 button의 속성으로 감 -->
                            <!--Rectangle 대신 Ellipse도 가능--><!--
                            
                            <Label Content="{TemplateBinding Content}" 
                                   FontSize="{TemplateBinding FontSize}" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>-->
        <StackPanel Width="100" Margin="30">
            <Button Style="{StaticResource niceButton}" Content="Button A"/>
            <Button Content="Button B"/>
            <Button Style="{StaticResource niceButton}" Content="Button C"/>
        </StackPanel>
    </Grid>
</Page>
